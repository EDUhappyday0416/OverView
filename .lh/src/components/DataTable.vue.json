{
    "sourceFile": "src/components/DataTable.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1691133376550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691133400126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+<template>\r\n+    <table class=\"table main-table\">\r\n+        <thead>\r\n+            <tr>\r\n+                <th :data-column=\"column.key\" :class=\"column.class\" v-for=\"column in columns\" :key=\"column.key\"\r\n+                    :style=\"column.colWidth\" @click=\"sort_item(column)\">\r\n+                    {{ column.name }}\r\n+                    <i v-if=\"column.sortable\" :class=\"[{ 'fa fa-arrow-up': column.sorted === 'asc', 'fa fa-arrow-down': column.sorted === 'desc' }]\"></i>\r\n+                </th>\r\n+            </tr>\r\n+        </thead>\r\n+        <tr v-for=\"(item, index) in filteredData\" :key=\"item[index]\" >\r\n+            <td v-for=\"(sortItems , i) in newArr\" :key=\"i\" :class=\"sortClassName[i]\">\r\n+                <template v-if=\"sortItems.type === 'date'\">\r\n+                    <div class=\"paginatedData_tooltip\">\r\n+                        <div class=\"paginatedData_tooltip_text\">\r\n+                            <span ref=\"itemRefs\" :key=\"index\">\r\n+                                <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n+                            </span>\r\n+                        </div>\r\n+                        <span class=\"paginatedData_tooltip_content\" v-if=\"list[i] > 90\">\r\n+                            <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n+                        </span>\r\n+                    </div>\r\n+                </template>\r\n+                <!-- 按鈕 -->\r\n+                <template v-else-if=\"sortItems.key == 'action'\">\r\n+                    <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n+                </template>\r\n+\r\n+                <!-- 不是按鈕或是日期 -->\r\n+                <template v-else>\r\n+                    <div class=\"paginatedData_tooltip\">\r\n+                        <div class=\"paginatedData_tooltip_text\">\r\n+                            <span ref=\"itemRefs\" :key=\"index\">{{ item[sortItems.key] }}</span>\r\n+                        </div>\r\n+                        <span class=\"paginatedData_tooltip_content\" v-if=\"list[i] > 90\">\r\n+                            {{ item[sortItems.key] }}\r\n+                        </span>\r\n+                    </div>\r\n+                </template>\r\n+            </td>\r\n+        </tr>\r\n+    </table>\r\n+</template>\r\n+<script setup>\r\n+    import { defineProps , computed ,  ref , watch } from 'vue'\r\n+    import { sort_items } from '../utils/sort'\r\n+\r\n+    const sort_column = ref('')\r\n+    let props = defineProps({\r\n+        paginatedData: Array,\r\n+        columns: Array,\r\n+    })\r\n+    const sortClassName = Object.values(props.columns).map(item => item.class);\r\n+\r\n+    const newArr = ref([]);\r\n+    props.columns.forEach(function (element) {\r\n+        newArr.value.push(element);\r\n+    });\r\n+    //這裡加上props過來的\r\n+    const filteredData = computed(() => {\r\n+        let { data } = props\r\n+        console.log(props)\r\n+        data = props.paginatedData.filter((row) => {\r\n+            return Object.keys(row).some((key) => {\r\n+                return row[key] == null || row[key] == '' || row[key] == undefined ? '--' :String(row[key])\r\n+            })\r\n+        })\r\n+        return data\r\n+    })\r\n+    const sort_item = (col) => {\r\n+        props.columns.forEach((object) => {\r\n+            if (object.sorted !== null && object.key !== col.key) {\r\n+                object.sorted = null\r\n+            }\r\n+        })\r\n+        if (col.sortable === true) {\r\n+            sort_column.value = col.key\r\n+            sort_items(col, filteredData.value) //這裡加上props過來的\r\n+        }\r\n+    }\r\n+\r\n+    const list = ref([])\r\n+    const itemRefs = ref([])\r\n+\r\n+    watch(itemRefs.value, (newX) => {\r\n+        for (let index in newX) {\r\n+            list.value.push(newX[index].offsetWidth)\r\n+        }\r\n+    })\r\n+</script>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1691133376550,
            "name": "Commit-0",
            "content": "<template>\r\n    <table class=\"table main-table\">\r\n        <thead>\r\n            <tr>\r\n                <th :data-column=\"column.key\" :class=\"column.class\" v-for=\"column in columns\" :key=\"column.key\"\r\n                    :style=\"column.colWidth\" @click=\"sort_item(column)\">\r\n                    {{ column.name }}\r\n                    <i v-if=\"column.sortable\" :class=\"[{ 'fa fa-arrow-up': column.sorted === 'asc', 'fa fa-arrow-down': column.sorted === 'desc' }]\"></i>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tr v-for=\"(item, index) in filteredData\" :key=\"item[index]\" >\r\n            <td v-for=\"(sortItems , i) in newArr\" :key=\"i\" :class=\"sortClassName[i]\">\r\n                <template v-if=\"sortItems.type === 'date'\">\r\n                    <div class=\"paginatedData_tooltip\">\r\n                        <div class=\"paginatedData_tooltip_text\">\r\n                            <span ref=\"itemRefs\" :key=\"index\">\r\n                                <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n                            </span>\r\n                        </div>\r\n                        <span class=\"paginatedData_tooltip_content\" v-if=\"list[i] > 90\">\r\n                            <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <!-- 按鈕 -->\r\n                <template v-else-if=\"sortItems.key == 'action'\">\r\n                    <slot :name=\"sortItems.key\" :index=\"index\" :value=\"item[sortItems.key]\"></slot>\r\n                </template>\r\n\r\n                <!-- 不是按鈕或是日期 -->\r\n                <template v-else>\r\n                    <div class=\"paginatedData_tooltip\">\r\n                        <div class=\"paginatedData_tooltip_text\">\r\n                            <span ref=\"itemRefs\" :key=\"index\">{{ item[sortItems.key] }}</span>\r\n                        </div>\r\n                        <span class=\"paginatedData_tooltip_content\" v-if=\"list[i] > 90\">\r\n                            {{ item[sortItems.key] }}\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</template>\r\n<script setup>\r\n    import { defineProps , computed ,  ref , watch } from 'vue'\r\n    import { sort_items } from '../utils/sort'\r\n\r\n    const sort_column = ref('')\r\n    let props = defineProps({\r\n        paginatedData: Array,\r\n        columns: Array,\r\n    })\r\n    const sortClassName = Object.values(props.columns).map(item => item.class);\r\n\r\n    const newArr = ref([]);\r\n    props.columns.forEach(function (element) {\r\n        newArr.value.push(element);\r\n    });\r\n    //這裡加上props過來的\r\n    const filteredData = computed(() => {\r\n        let { data } = props\r\n        console.log(props)\r\n        data = props.paginatedData.filter((row) => {\r\n            return Object.keys(row).some((key) => {\r\n                return row[key] == null || row[key] == '' || row[key] == undefined ? '--' :String(row[key])\r\n            })\r\n        })\r\n        return data\r\n    })\r\n    const sort_item = (col) => {\r\n        props.columns.forEach((object) => {\r\n            if (object.sorted !== null && object.key !== col.key) {\r\n                object.sorted = null\r\n            }\r\n        })\r\n        if (col.sortable === true) {\r\n            sort_column.value = col.key\r\n            sort_items(col, filteredData.value) //這裡加上props過來的\r\n        }\r\n    }\r\n\r\n    const list = ref([])\r\n    const itemRefs = ref([])\r\n\r\n    watch(itemRefs.value, (newX) => {\r\n        for (let index in newX) {\r\n            list.value.push(newX[index].offsetWidth)\r\n        }\r\n    })\r\n</script>\r\n<style scoped>\r\n</style>\r\n<style scoped src='@/assets/css/pub_custom.css'></style>"
        }
    ]
}