{
    "sourceFile": "src/stores/products.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1691989396218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691989458474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+       \r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691990219512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692156212637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,62 +23,7 @@\n \r\n         addItem(item) {\r\n             this.rawItems.push(item)\r\n         },\r\n-    }\r\n-});\n-import { defineStore } from 'pinia'\r\n-import { products } from '../api/products'\r\n-export const useProduct = defineStore(\"productData\", {\r\n-    state: () => ({\r\n-        data:[],\r\n-        rawItems:[]\r\n-    }),\r\n-    getters: {\r\n-       \r\n     },\r\n-    actions: {\r\n-        async getProducts() {\r\n-            try {\r\n-                const item = await products();\r\n-                console.log(item)\r\n-                this.data = item.data\r\n-                return item.data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-\r\n-        addItem(item) {\r\n-            this.rawItems.push(item)\r\n-        },\r\n-    }\r\n-});\n-import { defineStore } from 'pinia'\r\n-import { products } from '../api/products'\r\n-export const useProduct = defineStore(\"productData\", {\r\n-    state: () => ({\r\n-        data:[],\r\n-        rawItems:[]\r\n-    }),\r\n-    getters: {\r\n-       \r\n-    },\r\n-    actions: {\r\n-        async getProducts() {\r\n-            try {\r\n-                const item = await products();\r\n-                console.log(item)\r\n-                this.data = item.data\r\n-                return item.data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-\r\n-        addItem(item) {\r\n-            this.rawItems.push(item)\r\n-        },\r\n-    }\r\n+    persist: true\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692156587586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,11 @@\n         addItem(item) {\r\n             this.rawItems.push(item)\r\n         },\r\n     },\r\n-    persist: true\r\n+    persist: {\r\n+        enabled: true,\r\n+        strategies:[\r\n+            { storage : localStorage, path:['rawItems'] }\r\n+        ]\r\n+    }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692156649388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n     },\r\n     persist: {\r\n         enabled: true,\r\n         strategies:[\r\n-            { storage : localStorage, path:['rawItems'] }\r\n+            { storage : localStorage, paths:['rawItems'] }\r\n         ]\r\n     }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157002361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: true,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : this.rawItems }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157014970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: true,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : rawItems }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157024986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,76 +27,8 @@\n     },\r\n     persist: {\r\n         enabled: true,\r\n         strategies:[\r\n-            { storage : localStorage, paths : rawItems }\r\n+            { storage : localStorage, paths : [rawItems] }\r\n         ]\r\n     }\r\n-});\n-import { defineStore } from 'pinia'\r\n-import { products } from '../api/products'\r\n-export const useProduct = defineStore(\"productData\", {\r\n-    state: () => ({\r\n-        data:[],\r\n-        rawItems:[]\r\n-    }),\r\n-    getters: {\r\n-        doubleCount: (state) => state.rawItems.length\r\n-    },\r\n-    actions: {\r\n-        async getProducts() {\r\n-            try {\r\n-                const item = await products();\r\n-                console.log(item)\r\n-                this.data = item.data\r\n-                return item.data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-\r\n-        addItem(item) {\r\n-            this.rawItems.push(item)\r\n-        },\r\n-    },\r\n-    persist: {\r\n-        enabled: true,\r\n-        strategies:[\r\n-            { storage : localStorage, paths : this.rawItems }\r\n-        ]\r\n-    }\r\n-});\n-import { defineStore } from 'pinia'\r\n-import { products } from '../api/products'\r\n-export const useProduct = defineStore(\"productData\", {\r\n-    state: () => ({\r\n-        data:[],\r\n-        rawItems:[]\r\n-    }),\r\n-    getters: {\r\n-        doubleCount: (state) => state.rawItems.length\r\n-    },\r\n-    actions: {\r\n-        async getProducts() {\r\n-            try {\r\n-                const item = await products();\r\n-                console.log(item)\r\n-                this.data = item.data\r\n-                return item.data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-\r\n-        addItem(item) {\r\n-            this.rawItems.push(item)\r\n-        },\r\n-    },\r\n-    persist: {\r\n-        enabled: true,\r\n-        strategies:[\r\n-            { storage : localStorage, paths:['rawItems'] }\r\n-        ]\r\n-    }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157031692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: true,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : ['rawItems'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157061190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,44 +25,10 @@\n             this.rawItems.push(item)\r\n         },\r\n     },\r\n     persist: {\r\n-        enabled: true,\r\n+        enabled: false,\r\n         strategies:[\r\n             { storage : localStorage, paths : ['rawItems'] }\r\n         ]\r\n     }\r\n-});\n-import { defineStore } from 'pinia'\r\n-import { products } from '../api/products'\r\n-export const useProduct = defineStore(\"productData\", {\r\n-    state: () => ({\r\n-        data:[],\r\n-        rawItems:[]\r\n-    }),\r\n-    getters: {\r\n-        doubleCount: (state) => state.rawItems.length\r\n-    },\r\n-    actions: {\r\n-        async getProducts() {\r\n-            try {\r\n-                const item = await products();\r\n-                console.log(item)\r\n-                this.data = item.data\r\n-                return item.data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-\r\n-        addItem(item) {\r\n-            this.rawItems.push(item)\r\n-        },\r\n-    },\r\n-    persist: {\r\n-        enabled: true,\r\n-        strategies:[\r\n-            { storage : localStorage, paths : [rawItems] }\r\n-        ]\r\n-    }\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157080645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: false,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : ['rawItems'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157187872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: false,\r\n+        strategies:[\r\n+            // { storage : localStorage, paths : ['rawItems'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157297104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: false,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : ['rawItems'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157317855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: false,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : ['doubleCount'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692157338405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { products } from '../api/products'\r\n+export const useProduct = defineStore(\"productData\", {\r\n+    state: () => ({\r\n+        data:[],\r\n+        rawItems:[]\r\n+    }),\r\n+    getters: {\r\n+        doubleCount: (state) => state.rawItems.length\r\n+    },\r\n+    actions: {\r\n+        async getProducts() {\r\n+            try {\r\n+                const item = await products();\r\n+                console.log(item)\r\n+                this.data = item.data\r\n+                return item.data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+\r\n+        addItem(item) {\r\n+            this.rawItems.push(item)\r\n+        },\r\n+    },\r\n+    persist: {\r\n+        enabled: true,\r\n+        strategies:[\r\n+            { storage : localStorage, paths : ['doubleCount'] }\r\n+        ]\r\n+    }\r\n+});\n\\ No newline at end of file\n"
                }
            ],
            "date": 1691989396218,
            "name": "Commit-0",
            "content": "import { defineStore } from 'pinia'\r\nimport { products } from '../api/products'\r\nexport const useProduct = defineStore(\"productData\", {\r\n    state: () => ({\r\n        data:[],\r\n        rawItems:[]\r\n    }),\r\n    getters: {\r\n       \r\n    },\r\n    actions: {\r\n        async getProducts() {\r\n            try {\r\n                const item = await products();\r\n                console.log(item)\r\n                this.data = item.data\r\n                return item.data\r\n            } catch (error) {\r\n                this.error = error\r\n                return error\r\n            }   \r\n        },\r\n\r\n        addItem(item) {\r\n            this.rawItems.push(item)\r\n        },\r\n    }\r\n});"
        }
    ]
}