{
    "sourceFile": "src/stores/login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 62,
            "patches": [
                {
                    "date": 1691464628127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691464901964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n import { defineStore } from 'pinia'\r\n-import * as types from '../stores/type'\r\n \r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n         title: ''\r\n     }),\r\n     actions:{\r\n-        [types.LOGIN]: (state, data) => {\r\n-            localStorage.token = data;\r\n-            state.token = data;\r\n+        async registerUser(login, password) {\r\n+            try {\r\n+                this.user = await api.post({ login, password })\r\n+            } catch (error) {\r\n+                return error\r\n+            }\r\n         },\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1691466182543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,17 @@\n import { defineStore } from 'pinia'\r\n+import api from '../api/login'\r\n \r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n         title: ''\r\n     }),\r\n     actions:{\r\n-        async registerUser(login, password) {\r\n+        async registerUser(email, password) {\r\n             try {\r\n-                this.user = await api.post({ login, password })\r\n+                this.user = await api.post({ email, password })\r\n             } catch (error) {\r\n                 return error\r\n             }\r\n         },\r\n"
                },
                {
                    "date": 1691466223276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+import { defineStore } from 'pinia'\r\n+import api from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: ''\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            try {\r\n+                this.token = await api.post({ email, password })\r\n+            } catch (error) {\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691468239831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import { defineStore } from 'pinia'\r\n+import api from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: ''\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            try {\r\n+                const { data } = await loginApi({ email, password })\r\n+                token.value = data.token\r\n+            } catch (error) {\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691468312327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { defineStore } from 'pinia'\r\n-import api from '../api/login'\r\n+import { loginApi } from '../api/login'\r\n \r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n@@ -17,42 +17,4 @@\n             }\r\n         },\r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import api from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: ''\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            try {\r\n-                this.token = await api.post({ email, password })\r\n-            } catch (error) {\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import api from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: ''\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            try {\r\n-                this.user = await api.post({ email, password })\r\n-            } catch (error) {\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691470243596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n         title: ''\r\n     }),\r\n     actions:{\r\n         async registerUser(email, password) {\r\n+\r\n+            console.log(email)\r\n             try {\r\n                 const { data } = await loginApi({ email, password })\r\n                 token.value = data.token\r\n             } catch (error) {\r\n"
                },
                {
                    "date": 1691470281120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import { defineStore } from 'pinia'\r\n+import { loginApi } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: ''\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            try {\r\n+                const { data } = await loginApi({ email, password })\r\n+                token.value = data.token\r\n+            } catch (error) {\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691470412842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+import { defineStore } from 'pinia'\r\n+import { loginApi } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            try {\r\n+                const { data } = await loginApi({ email, password })\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691470632259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import { defineStore } from 'pinia'\r\n+import { loginApi } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            console.log('666666666666666')\r\n+            try {\r\n+                const { data } = await loginApi({ email, password })\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691472056962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,22 @@\n+import { defineStore } from 'pinia'\r\n+import { loginApi } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            try {\r\n+                const { data } = await loginApi({ email, password })\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691472095506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,100 +10,13 @@\n     }),\r\n     actions:{\r\n         async registerUser(email, password) {\r\n             try {\r\n-                const { data } = await loginApi({ email, password })\r\n+                const { data } = await loginApi(2222222)\r\n                 this.token = data.token\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n         },\r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            console.log('666666666666666')\r\n-            try {\r\n-                const { data } = await loginApi({ email, password })\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            try {\r\n-                const { data } = await loginApi({ email, password })\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: ''\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            try {\r\n-                const { data } = await loginApi({ email, password })\r\n-                token.value = data.token\r\n-            } catch (error) {\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: ''\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-\r\n-            console.log(email)\r\n-            try {\r\n-                const { data } = await loginApi({ email, password })\r\n-                token.value = data.token\r\n-            } catch (error) {\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691472125579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import { defineStore } from 'pinia'\r\n+import { loginApi } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(email, password) {\r\n+            console.log(email, password)\r\n+            try {\r\n+                const { data } = await loginApi(2222222)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691472161889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,38 +8,15 @@\n         title: '',\r\n         error: null\r\n     }),\r\n     actions:{\r\n-        async registerUser(email, password) {\r\n-            console.log(email, password)\r\n+        async registerUser(data) {\r\n             try {\r\n-                const { data } = await loginApi(2222222)\r\n+                const { data } = await loginApi(data)\r\n                 this.token = data.token\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n         },\r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(email, password) {\r\n-            try {\r\n-                const { data } = await loginApi(2222222)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691472203782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n         title: '',\r\n         error: null\r\n     }),\r\n     actions:{\r\n-        async registerUser(data) {\r\n+        async registerUser(parmas) {\r\n             try {\r\n-                const { data } = await loginApi(data)\r\n+                const { data } = await loginApi(parmas)\r\n                 this.token = data.token\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n"
                },
                {
                    "date": 1691473198394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n     actions:{\r\n         async registerUser(parmas) {\r\n             try {\r\n                 const { data } = await loginApi(parmas)\r\n+                console.log(data)\r\n                 this.token = data.token\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n"
                },
                {
                    "date": 1691473781018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+import { defineStore } from 'pinia'\r\n+import { register } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691473928367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+\r\n+        async loginUser () {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691473937148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,50 +31,4 @@\n             }\r\n         }\r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { loginApi } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await loginApi(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691474011293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n                 return error\r\n             }\r\n         },\r\n \r\n-        async loginUser () {\r\n+        async loginUser (parmas) {\r\n             try {\r\n                 const { data } = await login(parmas)\r\n                 console.log(data)\r\n                 this.token = data.token\r\n"
                },
                {
                    "date": 1691474699773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691474709981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,38 +32,4 @@\n             }\r\n         }\r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691475336072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n \r\n         async loginUser (parmas) {\r\n             try {\r\n                 const { data } = await login(parmas)\r\n-                console.log(data)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n             } catch (error) {\r\n                 this.error = error\r\n"
                },
                {
                    "date": 1691475512247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,16 @@\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n+        },\r\n+\r\n+\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n         }\r\n+\r\n+\r\n+\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1691475737212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,26 +18,22 @@\n                 this.error = error\r\n                 return error\r\n             }\r\n         },\r\n-\r\n         async loginUser (parmas) {\r\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n+                \r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n         },\r\n-\r\n-\r\n         async removeToken () {\r\n             this.token = null;\r\n             Cookies.remove('token');\r\n         }\r\n \r\n-\r\n-\r\n     }\r\n })\r\n"
                },
                {
                    "date": 1691475862030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter } from 'vue-router'\r\n+const router = useRouter()\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+\r\n+                router.push(`/DragDrop/${i}`)\r\n+\r\n+                \r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691475873447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter } from 'vue-router'\r\n+const router = useRouter()\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+\r\n+                router.push(`/OverView`)\r\n+\r\n+                \r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691475886724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,55 +27,10 @@\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n \r\n-                router.push(`/OverView`)\r\n-\r\n                 \r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n \r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter } from 'vue-router'\r\n-const router = useRouter()\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-\r\n-                router.push(`/DragDrop/${i}`)\r\n-\r\n                 \r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n@@ -87,43 +42,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-                \r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691476327273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter } from 'vue-router'\r\n+const router = useRouter()\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+                router.push(`/About`)\r\n+\r\n+                \r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691476356071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691476433183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,7 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n import { useRouter } from 'vue-router'\r\n const router = useRouter()\r\n \r\n export const useLogin = defineStore('login' , {\r\n@@ -65,11 +26,9 @@\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n-                router.push(`/About`)\r\n-\r\n-                \r\n+                router.push({ name: 'About' })\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n@@ -80,49 +39,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter } from 'vue-router'\r\n-const router = useRouter()\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-\r\n-                \r\n-\r\n-                \r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691476506529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRoute } from 'vue-router'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+                router.push({ name: 'About' })\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691476820039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,10 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-import { useRoute } from 'vue-router'\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-                router.push({ name: 'About' })\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter } from 'vue-router'\r\n+import { useRouter, useRoute } from 'vue-router'\r\n const router = useRouter()\r\n-\r\n+const route = useRoute()\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n@@ -67,9 +26,11 @@\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n-                router.push({ name: 'About' })\r\n+                router.push({\r\n+                    name: 'about',\r\n+                })\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n"
                },
                {
                    "date": 1691476869032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-const router = useRouter()\r\n-const route = useRoute()\r\n+\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n@@ -26,11 +24,8 @@\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n-                router.push({\r\n-                    name: 'about',\r\n-                })\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n"
                },
                {
                    "date": 1691477048036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+const router = useRouter()\r\n+const route = useRoute()\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n@@ -24,8 +26,10 @@\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n+\r\n+                router.push({ name: 'OverView' });\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n"
                },
                {
                    "date": 1691477153673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-const router = useRouter()\r\n-const route = useRoute()\r\n+import { router } from '@/router';\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n"
                },
                {
                    "date": 1691477200731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import router from 'vue-router'\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                console.log(data)\r\n+                this.token = data.token\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+\r\n+                router.push({ name: 'OverView' });\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691477212551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,45 +39,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { router } from '@/router';\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                console.log(data)\r\n-                this.token = data.token\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-\r\n-                router.push({ name: 'OverView' });\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691477222134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-import router from 'vue-router'\r\n-\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+const router = useRouter()\r\n+const route = useRoute()\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n"
                },
                {
                    "date": 1691478283555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n     actions:{\r\n         async registerUser(parmas) {\r\n             try {\r\n                 const { data } = await register(parmas)\r\n-                console.log(data)\r\n                 this.token = data.token\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n"
                },
                {
                    "date": 1691478333928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n         async registerUser(parmas) {\r\n             try {\r\n                 const { data } = await register(parmas)\r\n                 this.token = data.token\r\n+\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n@@ -26,9 +27,9 @@\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n \r\n-                router.push({ name: 'OverView' });\r\n+                router.push({ name: 'about' });\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n"
                },
                {
                    "date": 1691478453065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,8 @@\n             try {\r\n                 const { data } = await login(parmas)\r\n                 this.token = data.token\r\n                 Cookies.set('token', data.token);\r\n-\r\n-                router.push({ name: 'about' });\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n"
                },
                {
                    "date": 1691478675512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+const router = useRouter()\r\n+const route = useRoute()\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.token\r\n+                Cookies.set('token', data.token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691555411908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,7 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-const router = useRouter()\r\n-const route = useRoute()\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n@@ -15,19 +12,19 @@\n         async registerUser(parmas) {\r\n             try {\r\n                 const { data } = await register(parmas)\r\n                 this.token = data.token\r\n-\r\n+                return data\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n             }\r\n         },\r\n         async loginUser (parmas) {\r\n             try {\r\n                 const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n                 return data\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n@@ -39,45 +36,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-const router = useRouter()\r\n-const route = useRoute()\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.token\r\n-                Cookies.set('token', data.token);\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691556364665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n+const token = Cookies.get('token');\r\n+\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n@@ -32,8 +34,18 @@\n         },\r\n         async removeToken () {\r\n             this.token = null;\r\n             Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile(token)\r\n+                console.log(data)\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n         }\r\n \r\n     }\r\n })\r\n"
                },
                {
                    "date": 1691556476063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n         title: '',\r\n-        error: null\r\n+        error: null,\r\n+        userInfo:[]\r\n     }),\r\n     actions:{\r\n         async registerUser(parmas) {\r\n             try {\r\n@@ -38,9 +39,9 @@\n         },\r\n         async getUserData () {\r\n             try {\r\n                 const { data } = await profile(token)\r\n-                console.log(data)\r\n+                this.userInfo = data\r\n                 return data\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n"
                },
                {
                    "date": 1691556981957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         async removeToken () {\r\n             this.token = null;\r\n             Cookies.remove('token');\r\n         },\r\n-        async getUserData () {\r\n+        async getUserData (token) {\r\n             try {\r\n                 const { data } = await profile(token)\r\n                 this.userInfo = data\r\n                 return data\r\n"
                },
                {
                    "date": 1691557001621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { defineStore } from 'pinia'\r\n import { register , login } from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-const token = Cookies.get('token');\r\n \r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n"
                },
                {
                    "date": 1691557138754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData (token) {\r\n+            try {\r\n+                const { data } = await profile(token)\r\n+                this.userInfo = data\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691557282414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const token = Cookies.get('token');\r\n+                const { data } = await profile(token)\r\n+                this.userInfo = data\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691557342732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,106 +49,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData (token) {\r\n-            try {\r\n-                const { data } = await profile(token)\r\n-                this.userInfo = data\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData (token) {\r\n-            try {\r\n-                const { data } = await profile(token)\r\n-                this.userInfo = data\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691557941314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const token = Cookies.get('token');\r\n+                const headers = {\r\n+                    Authorization : `Bearer ${YOUR_ACCESS_TOKEN}`\r\n+                }\r\n+                const { data } = await profile(headers)\r\n+                this.userInfo = data\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691558579321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile()\r\n+                this.userInfo = data\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691558598779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile } from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                const { data } = await register(parmas)\r\n+                this.token = data.token\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile()\r\n+                this.userInfo = data\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691559299019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,9 @@\n         },\r\n         async getUserData () {\r\n             try {\r\n                 const { data } = await profile()\r\n+                console.log(data)\r\n                 this.userInfo = data\r\n                 return data\r\n             } catch (error) {\r\n                 this.error = error\r\n@@ -48,162 +49,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData () {\r\n-            try {\r\n-                const { data } = await profile()\r\n-                this.userInfo = data\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData () {\r\n-            try {\r\n-                const token = Cookies.get('token');\r\n-                const headers = {\r\n-                    Authorization : `Bearer ${YOUR_ACCESS_TOKEN}`\r\n-                }\r\n-                const { data } = await profile(headers)\r\n-                this.userInfo = data\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile } from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData () {\r\n-            try {\r\n-                const token = Cookies.get('token');\r\n-                const { data } = await profile(token)\r\n-                this.userInfo = data\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691730739486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,30 @@\n import { defineStore } from 'pinia'\r\n-import { register , login , profile } from '../api/login'\r\n+import { register , login , profile , upImageLoad} from '../api/login'\r\n import Cookies from 'js-cookie';\r\n-\r\n+import { useRouter, useRoute } from 'vue-router'\r\n export const useLogin = defineStore('login' , {\r\n     state: () => ({\r\n         user: {},\r\n         token: null,\r\n         title: '',\r\n         error: null,\r\n-        userInfo:[]\r\n+        userInfo:[],\r\n+        fileImg:''\r\n+        // createUser:[]\r\n     }),\r\n     actions:{\r\n         async registerUser(parmas) {\r\n             try {\r\n-                const { data } = await register(parmas)\r\n-                this.token = data.token\r\n+                // const { data } = await register(parmas)\r\n+                // this.token = data.token\r\n+                // return data\r\n+                const { data } = await register(parmas);\r\n                 return data\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n-            }\r\n+            }   \r\n         },\r\n         async loginUser (parmas) {\r\n             try {\r\n                 const { data } = await login(parmas)\r\n@@ -37,16 +41,31 @@\n             Cookies.remove('token');\r\n         },\r\n         async getUserData () {\r\n             try {\r\n-                const { data } = await profile()\r\n-                console.log(data)\r\n-                this.userInfo = data\r\n+                const { data } = await profile();\r\n+                this.userInfo = data;\r\n                 return data\r\n             } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async upDateImages () {\r\n+            try {\r\n+                const { data } = await upImageLoad(file);\r\n+                this.fileImg = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n         }\r\n \r\n     }\r\n })\r\n"
                },
                {
                    "date": 1691730745520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile , upImageLoad} from '../api/login'\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[],\r\n+        fileImg:''\r\n+        // createUser:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                // const { data } = await register(parmas)\r\n+                // this.token = data.token\r\n+                // return data\r\n+                const { data } = await register(parmas);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile();\r\n+                this.userInfo = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async upDateImages (file) {\r\n+            try {\r\n+                const { data } = await upImageLoad(file);\r\n+                this.fileImg = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691730790920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile , upImageLoad} from '../api/login'\r\n+import { upImageLoad } from '../api/upload'\r\n+\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[],\r\n+        fileImg:''\r\n+        // createUser:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                // const { data } = await register(parmas)\r\n+                // this.token = data.token\r\n+                // return data\r\n+                const { data } = await register(parmas);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile();\r\n+                this.userInfo = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async upDateImages (file) {\r\n+            try {\r\n+                const { data } = await upImageLoad(file);\r\n+                this.fileImg = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691730796939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,146 +70,4 @@\n         }\r\n \r\n     }\r\n })\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile , upImageLoad} from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[],\r\n-        fileImg:''\r\n-        // createUser:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                // const { data } = await register(parmas)\r\n-                // this.token = data.token\r\n-                // return data\r\n-                const { data } = await register(parmas);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData () {\r\n-            try {\r\n-                const { data } = await profile();\r\n-                this.userInfo = data;\r\n-                return data\r\n-            } catch (error) {\r\n-                console.log(error)\r\n-                // if (error.response.status !== 200) {\r\n-                //     // this.router.push({ name: 'login' }); \r\n-                // }\r\n-                return Promise.reject(error.message);\r\n-            } \r\n-        },\r\n-        async upDateImages (file) {\r\n-            try {\r\n-                const { data } = await upImageLoad(file);\r\n-                this.fileImg = data;\r\n-                return data\r\n-            } catch (error) {\r\n-                console.log(error)\r\n-                // if (error.response.status !== 200) {\r\n-                //     // this.router.push({ name: 'login' }); \r\n-                // }\r\n-                return Promise.reject(error.message);\r\n-            } \r\n-        }\r\n-\r\n-    }\r\n-})\r\n-import { defineStore } from 'pinia'\r\n-import { register , login , profile , upImageLoad} from '../api/login'\r\n-import Cookies from 'js-cookie';\r\n-import { useRouter, useRoute } from 'vue-router'\r\n-export const useLogin = defineStore('login' , {\r\n-    state: () => ({\r\n-        user: {},\r\n-        token: null,\r\n-        title: '',\r\n-        error: null,\r\n-        userInfo:[],\r\n-        fileImg:''\r\n-        // createUser:[]\r\n-    }),\r\n-    actions:{\r\n-        async registerUser(parmas) {\r\n-            try {\r\n-                // const { data } = await register(parmas)\r\n-                // this.token = data.token\r\n-                // return data\r\n-                const { data } = await register(parmas);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }   \r\n-        },\r\n-        async loginUser (parmas) {\r\n-            try {\r\n-                const { data } = await login(parmas)\r\n-                this.token = data.access_token\r\n-                Cookies.set('token', data.access_token);\r\n-                return data\r\n-            } catch (error) {\r\n-                this.error = error\r\n-                return error\r\n-            }\r\n-        },\r\n-        async removeToken () {\r\n-            this.token = null;\r\n-            Cookies.remove('token');\r\n-        },\r\n-        async getUserData () {\r\n-            try {\r\n-                const { data } = await profile();\r\n-                this.userInfo = data;\r\n-                return data\r\n-            } catch (error) {\r\n-                console.log(error)\r\n-                // if (error.response.status !== 200) {\r\n-                //     // this.router.push({ name: 'login' }); \r\n-                // }\r\n-                return Promise.reject(error.message);\r\n-            } \r\n-        },\r\n-        async upDateImages () {\r\n-            try {\r\n-                const { data } = await upImageLoad(file);\r\n-                this.fileImg = data;\r\n-                return data\r\n-            } catch (error) {\r\n-                console.log(error)\r\n-                // if (error.response.status !== 200) {\r\n-                //     // this.router.push({ name: 'login' }); \r\n-                // }\r\n-                return Promise.reject(error.message);\r\n-            } \r\n-        }\r\n-\r\n-    }\r\n-})\r\n"
                },
                {
                    "date": 1691730808913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { defineStore } from 'pinia'\r\n-import { register , login , profile , upImageLoad} from '../api/login'\r\n+import { register , login , profile} from '../api/login'\r\n import { upImageLoad } from '../api/upload'\r\n \r\n import Cookies from 'js-cookie';\r\n import { useRouter, useRoute } from 'vue-router'\r\n"
                },
                {
                    "date": 1691730976315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile} from '../api/login'\r\n+import { upImageLoad } from '../api/upload'\r\n+\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[],\r\n+        fileImg:''\r\n+        // createUser:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(parmas) {\r\n+            try {\r\n+                // const { data } = await register(parmas)\r\n+                // this.token = data.token\r\n+                // return data\r\n+                const { data } = await register(parmas);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+        async loginUser (parmas) {\r\n+            try {\r\n+                const { data } = await login(parmas)\r\n+                this.token = data.access_token\r\n+                Cookies.set('token', data.access_token);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile();\r\n+                this.userInfo = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async upDateImages (file) {\r\n+            try {\r\n+                const { data } = await upImageLoad(file);\r\n+                this.fileImg = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                // if (error.response.status !== 200) {\r\n+                //     // this.router.push({ name: 'login' }); \r\n+                // }\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                },
                {
                    "date": 1691985587321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n                 this.token = data.access_token;\r\n                 this.refresh_token = data.refresh_token\r\n                 Cookies.set('token', data.access_token);\r\n                 Cookies.set('refresh_token', data.refresh_token);\r\n+                sessionStorage.setItem(\"refresh_token\",  data.refresh_token);\r\n                 return data\r\n             } catch (error) {\r\n                 this.error = error\r\n                 return error\r\n"
                },
                {
                    "date": 1692146056747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+import { defineStore } from 'pinia'\r\n+import { register , login , profile} from '../api/login'\r\n+import { upImageLoad , getImageLoad } from '../api/upload'\r\n+import NProgress from 'nprogress'\r\n+\r\n+import Cookies from 'js-cookie';\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+NProgress.configure({ showSpinner: false })\r\n+\r\n+export const useLogin = defineStore('login' , {\r\n+    state: () => ({\r\n+        user: {},\r\n+        token: null,\r\n+        title: '',\r\n+        error: null,\r\n+        userInfo:[],\r\n+        fileImg:'',\r\n+        refresh_token:null\r\n+        // createUser:[]\r\n+    }),\r\n+    actions:{\r\n+        async registerUser(params) {\r\n+            try {\r\n+                // const { data } = await register(params)\r\n+                // this.token = data.token\r\n+                // return data\r\n+                const { data } = await register(params);\r\n+                return data\r\n+            } catch (error) {\r\n+                this.error = error\r\n+                return error\r\n+            }   \r\n+        },\r\n+        async loginUser (email,password,cb) {\r\n+            cb = arguments[arguments.length - 1]\r\n+            const { data } = await login(params)\r\n+            if (data.access_token) {\r\n+                if (cb) cb(true)\r\n+                return    \r\n+            }\r\n+            \r\n+            // try {\r\n+            //     const { data } = await login(params)\r\n+            //     this.token = data.access_token;\r\n+            //     this.refresh_token = data.refresh_token\r\n+            //     Cookies.set('token', data.access_token);\r\n+            //     Cookies.set('refresh_token', data.refresh_token);\r\n+            //     sessionStorage.setItem(\"refresh_token\",  data.refresh_token);\r\n+            //     return data\r\n+            // } catch (error) {\r\n+            //     this.error = error\r\n+            //     return error\r\n+            // }\r\n+        },\r\n+        async removeToken () {\r\n+            this.token = null;\r\n+            Cookies.remove('token');\r\n+        },\r\n+        async getUserData () {\r\n+            try {\r\n+                const { data } = await profile();\r\n+                this.userInfo = data;\r\n+                return data\r\n+            } catch (error) {\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async upDateImages (file) {\r\n+            try {\r\n+                NProgress.start()\r\n+                const { data } = await upImageLoad(file);\r\n+                this.fileImg = data;\r\n+                NProgress.done()\r\n+                return data\r\n+            } catch (error) {\r\n+                NProgress.done()\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        },\r\n+        async getImg (file) {\r\n+            try {\r\n+                const response = await getImageLoad(file);\r\n+                    if (response.data) {\r\n+                    const blob = new Blob([response.data], { type: 'image/png' }); // Assuming it's always a WebP format\r\n+                    this.fileImg = blob;\r\n+                }\r\n+                NProgress.done();\r\n+                return this.fileImg;\r\n+            } catch (error) {\r\n+                console.log(error)\r\n+                NProgress.done()\r\n+                return Promise.reject(error.message);\r\n+            } \r\n+        }\r\n+\r\n+    }\r\n+})\r\n"
                }
            ],
            "date": 1691464628127,
            "name": "Commit-0",
            "content": "import { defineStore } from 'pinia'\r\nimport * as types from '../stores/type'\r\n\r\nexport const useLogin = defineStore('login' , {\r\n    state: () => ({\r\n        user: {},\r\n        token: null,\r\n        title: ''\r\n    }),\r\n    actions:{\r\n        [types.LOGIN]: (state, data) => {\r\n            localStorage.token = data;\r\n            state.token = data;\r\n        },\r\n    }\r\n})\r\n"
        }
    ]
}